@model QuestionRetrievalViewModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<form asp-action="Edit" asp-controller="Question" asp-antiforgery="true">
    
    <div class="form-group">
        <label asp-for="Title">Title</label>
        <input asp-for="Title" type="text" class="form-control" id="title" name="Title" required/>
    </div>

    <div class="form-group">
        <label asp-for="Body"><h5><b>What are the details of your problem?</b></h5></label>
        <small class="form-text text-muted">Introduce the problem and expand on what you put in the title. Minimum 20 characters.</small>
        <textarea class="form-control" id="body" asp-for="Body"></textarea>
    </div>

    <div class="mt-3">
        <h2>Tag Input Form</h2>
        <div class="form-group">
            <input type="text" name="tags" class="form-control" id="tagInput" placeholder="Enter tags">
            <small id="tagHelp" class="form-text text-muted">Maximum 5 tags allowed.</small>
        </div>
        <div id="tagList"></div>
    </div>
    <input type="hidden" asp-for="MemberId"/>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts
{
    <script>
        function initializeEasyMDE(textareaId) {
            return new EasyMDE({
                element: document.getElementById(textareaId),
                toolbar: ["bold", "italic", "heading", "|", "quote", "unordered-list", "ordered-list", 
                "|", "link", "image", "|", "preview", "side-by-side", "fullscreen", "|", "guide",
                    {
                        name: "code",
                        action: function customFunction(editor){
                            let cm = editor.codemirror;
                            let output = '```c++\n\n```';
                            let startPoint = cm.getCursor("start");
                            let endPoint = cm.getCursor("end");
                            cm.replaceSelection(output);
                            startPoint.ch += 3;
                            endPoint.ch = startPoint.ch;
                            cm.setSelection(startPoint, endPoint);
                        },
                        className: "fa fa-code", 
                        title: "Code Block",
                    },
                    {
                        name: "html",
                        action: function customFunction(editor){
                            let cm = editor.codemirror;
                            let output = '```html\n\n```';
                            let startPoint = cm.getCursor("start");
                            let endPoint = cm.getCursor("end");
                            cm.replaceSelection(output);
                            startPoint.ch += 3;
                            endPoint.ch = startPoint.ch;
                            cm.setSelection(startPoint, endPoint);
                        },
                        className: "fa fa-html5",
                        title: "HTML Block",
                    }
                ]
            });
        }
        
        let easymde1 = initializeEasyMDE("body");
     </script>
    
    
    <script>
        $(document).ready(function () {
            let tags = @Html.Raw(Json.Serialize(Model.QuestionTags.Select(t => t.TagName).ToList()));
            
            // Display the tags
            tags.forEach(tag => {
                $('#tagList').append('<span class="badge badge-primary mr-2">' + tag + '<button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button></span>');
            });

            $('#tagInput').on('keydown', function (event) {
                if (event.keyCode === 13 || event.keyCode === 32) { // Enter key and Space key
                    addTag($(this).val().trim());
                    event.preventDefault();
                }
            });

            function addTag(tag) {
                if (tag !== '' && tags.length < 5 && !tags.includes(tag)) {
                    tags.push(tag);
                    $('#tagList').append('<span class="badge badge-primary mr-2">' + tag + '<button type="button" class="close" aria-label="Close"><span aria-hidden="true">&times;</span></button></span>');
                    $('#tagInput').val('');
                }
            }

            $('#tagList').on('click', '.close', function () {
                let tagToRemove = $(this).parent().clone().children().remove().end().text().trim();
                    let tagIndex = tags.indexOf(tagToRemove);
                    if (tagIndex !== -1) {
                        tags.splice(tagIndex, 1);
                    }
                    $(this).parent().remove();
            });

            $('form').submit(function () {
                // Update the value of the original textarea with the value of the EasyMDE editor
                $('#body').val(easymde1.value());
            
                // Remove any existing hidden tag inputs
                    $('input[name="tags"]').remove();
                    console.log('i am here');
                    // Create a hidden input field for each tag
                       tags.forEach(function(tag, index) {
                           $('<input>').attr({
                               type: 'hidden',
                               name: 'QuestionTags[' + index + '].TagName',
                               value: tag
                           }).appendTo('form');
                       });
                return true;
            });
        });
    </script>
}
